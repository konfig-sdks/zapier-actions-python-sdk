# coding: utf-8

"""
    Zapier AI Actions API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from zapier_actions_python_sdk import schemas  # noqa: F401


class ExposedActionResponseSchema(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "configuration_link",
            "results",
        }
        
        class properties:
            
            
            class results(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ExposedActionSchema']:
                        return ExposedActionSchema
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ExposedActionSchema'], typing.List['ExposedActionSchema']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'results':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ExposedActionSchema':
                    return super().__getitem__(i)
            configuration_link = schemas.StrSchema
            __annotations__ = {
                "results": results,
                "configuration_link": configuration_link,
            }
    
    configuration_link: MetaOapg.properties.configuration_link
    results: MetaOapg.properties.results
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["results"]) -> MetaOapg.properties.results: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["configuration_link"]) -> MetaOapg.properties.configuration_link: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["results", "configuration_link", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["results"]) -> MetaOapg.properties.results: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["configuration_link"]) -> MetaOapg.properties.configuration_link: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["results", "configuration_link", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        configuration_link: typing.Union[MetaOapg.properties.configuration_link, str, ],
        results: typing.Union[MetaOapg.properties.results, list, tuple, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ExposedActionResponseSchema':
        return super().__new__(
            cls,
            *args,
            configuration_link=configuration_link,
            results=results,
            _configuration=_configuration,
            **kwargs,
        )

from zapier_actions_python_sdk.model.exposed_action_schema import ExposedActionSchema
